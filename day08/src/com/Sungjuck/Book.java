package com.Sungjuck;

/*
 * 클래스의 구조 
 * 
 *  클래스 헤더 
 *   [접근 제한자(public, default)] [클래스 종류 (abstract)] class 클래스명  
 *   
 *   접근제한자? 
 *   	- 현재 클래스를 생성하고 사용하는데 있어 제한을 둔다는 의미 
 *   	  public, default : 아무것도 쓰지 않는 방법 
 *   
 *   클래스의 종류 
 *   	- final, abstract(추상)등 어떤 클래스인지 알리는 예약어 
 * 
 * 	  맴버필드 
 * 		1. 변수, 상수
 * 		2. 객체가 만들어질 때 특징적 속성을 저장하는것(속성)
 * 		3. static 변수, 상수 
 *
 *	   맴버 메소드(함수) 
 *		1. 특정한 일을 수행하는 행위, 즉 동작을 나타냄
 *		2. static 메소드, instance 메소드로 나뉨 
 *
 *
 *
 *		변수						위치									생성시기 
	-----------------------------------------------------------------------
 *		1.클래스 변수 : 			클래스 영역 					클래스가 메모리에 올라갈때
 *																	(클래스가 생성될 때)
 *																	-------------------
 *		2. 인스턴스 변수 :  		클래스 영역						new 라는 인스턴스가 될때
 *																	(객체가 만들어 질 때 new 연산자) 
 *-------------------------------------------------------------------------
 *		3. 지역 변수 :				클래스 영역 이외의 영역 		변수 선언문이 수행될떄 
 *									(메소드, 생성자, 초기화 
 *											블록내부)
 *
 *		클래스 변수는 선언할 때 변수앞에 static을 붙이기만 하면 됨 
 *					모든 인스턴스가 공통된 저장공간을 공유할 수 있다. 
 *
 *
 *
 *
 *
 *
 *
 */
/*
class Avs{ // 디폴트 클래스 // 디폴트라고 쓰진 않음 생략가능 
	
}
*/

public class Book { // 클래스의 헤더 
	
	String name;  //제목
	String writer;  //저자
	int price; 		// 가격 
	int nowPage;  // 980페이지 
	String isbn;    // 일련번호 : 
	
	public Book() { // 생성자 


	}
	public void nextpage() {nowPage++;}
	public void previousePage() {nowPage--;} 
		
	public static void main(String[] args) {
		Book bb = new Book();
		// new라는 키워드를 통해서 무조건 메모리흘 공간을 할당받고 생성자를 호출함.
		
		
		bb.name = "홍길동"; // 여기서 스태틱이 붙으면 그떄부터 클래스로 됨 
		bb.writer = "허균";  // 이건 인스턴스 변수 - 객체를 생성해야만 접근할 수 있는 변
		System.out.println("bb.name"); // name  - 을 사용하면안됨 -> 정의 된게 없으니까 -> 그러니까 객체가 필요함 
		System.out.println("bb.write");
		// 객체가 필요하다는 의미가 뭐지? 
		
		
		
	}

	
	

}
