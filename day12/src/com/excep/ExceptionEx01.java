package com.excep;
/*
 * 
 * 예외처리
 * 1. 프로그램 오류
 * - 프로그램이 실행중 어떤 원인에 의해서 오동작을 하거나 비정상적으로 종료되었을 경우 오류라고함
 * -컴파일 에러: 컴파일시 발생하는 에러
 * -런타임 에러: 실행 도중 발생하는 에러
 * -컴파일러는 문법적인 오류만 인식함
 * -자바에서는 런타임에러를 에러와 예외로 구분함
 *   예외: 프로그램 코드에 의해서 수정될 수 있는 다소 미약한 오류
 *   오류: 프로그램 코드에 의해서도 수정이 안되는 심각한 오류
 *   
 * 
 * 2.예외가 일어나는 상황
 * -점수를 0으로 나누는 경우
 * -배열의 인덱스 값이 음수 값을 가지거나, 크기를 벗어나는 경우
 * -형변이 적절하지 못했을 경우
 * -입출력시 인터럽트가 발생되는 경우
 * -입출력시 파일이 존재하지 않는 경우
 * -메소드 호출시
 * 
 * 
 * 3.예외처리의 목적
 * -예외의 발생으로 인한 실행 중인 프로그램을 비정상적인 종료를 막고,
 *  정상적인 실행 상태를 유지할 수 있도록 하는 것
 *  
 *  
 *  
 *  예외처리 구문
 *  try{
 *  
 * 예외가 발생할 가능성이 있는 코드를 작성함
 * }catch (예외타입 매개변수){
 * 예외가 발생했을 경우 처리할 코드 작성함(예외가 발생했을 경우만 동작함)
 * }catch (예외타입 매개변수){
 *  예외가 발생했을 경우 처리할 코드 작성함(예외가 발생했을 경우만 동작함)
 * }catch (예외타입 매개변수){
 *  예외가 발생했을 경우 처리할 코드 작성함(예외가 발생했을 경우만 동작함)
 * 
 * }
 * 
 * 
 */
public class ExceptionEx01 {
/*
 * 문법적인 오류가 없기 때문에 컴파일시 에러는 발생하지 않음
 * 실행도중에 익셉션이 발생
 * 
 * 
 * 
 * 
 */
	public static void main(String[] args) {
	
		int num=50;
		int res=0;
		
		for(int i=0; i<10; i++) {
			try {
			res=num/(int)(Math.random()*5);
			System.out.println(res);
			}catch(ArithmeticException ae) {
				System.out.println("0으로 나눌수 없습니다.");
			}
		}

	}

}
