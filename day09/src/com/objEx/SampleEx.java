package com.objEx;

/*
 * 클래스의 구성요소
	1.맴버필드

	- 변수와 상수 즉 데이터라고 하는 이것은 객체가 만들어질때 그 객체의 특징적인 속성을 저장하는 것임
	- 필드의 형태가 static이냐 instance냐에 따라 필드의 개념이 달라진다
	- 상수란?
    - 상수는 고정된 값을 의미, 프로그램이 종료될때 까지 변하지 않음
	- 변수란?
    - 상수와 반대로 프로그램이 종료될때까지 값이 변경될수 있는 값
    - 형식 : 접근 제한자 지정어 자료형 변수형
        - 접근제한자? : private, default, protected, public
        - 지정어 : final, static

 	2.맴버 매소드

	- 특정한 일을 수행하는 행위, 동작을 의미
	- 맴버필드 들의 값을 가지고 작업을 수행할 수도 있으며, 매소드도  static메소드, instance메소드로 나뉜다. static 매소드는 객체를 생성하지 않아도 사용이 가능하며 instance 메소드는 객체를 생성해야만 사용이 가능하다.

	3. 생성자
	
- 생성자는 객체의 생성을 알리는 역할과 초기화 역할을 담당한다.
 * 
 * */

class Sample {
	// 인스턴스 변수 : 인스턴스 생성 후에 메모리 공간이 할당됨 - > 객체를 써먹어야 사용가능 
	int x; // 클래스의 변수에는 2개 스테틱 붙은 변수 인스턴스 변수 --> 인스턴스 변수 
	int y;
	
	
	
	
}





public class SampleEx {

	public static void main(String[] args) {
		Sample s = new Sample(); // 생성자 함수를 만들어 객체 생성 --> 인스턴스 생성 완료 
		// 이렇게 해야 클래스 속 변수에 접근가능하다 이런 뜻임 
		// new : new라는 키워드를 통해 무조건 메모리 공간을 할당받고 생성자를 생성하여 인스턴스를 생성한다 
		// 생성자 : ~~(); 괄호를 만들어 놓는것이 생성자 
		System.out.println(s.x);
		// 자바에서 맴버들이 각각 접근 지정자를 가진다. 
		
	}

}
